services:
  env_manager:
    image: busybox
    volumes:
      - ./.env:/tmp/.env
      - env_data:/env_data
    command: >
      sh -c "
            if [ ! -f /env_data/.env ]; then
              cp /tmp/.env /env_data/.env
            fi
            tail -f /dev/null
          "

  data_volume:
    image: busybox
    volumes:
      - data_volume:/data
    command: >
      sh -c "
              mkdir -p /data/labels/train
              mkdir -p /data/labels/val
              mkdir -p /data/images/train
              mkdir -p /data/images/val
              mkdir -p /data/masks/val
              mkdir -p /data/masks/train
              mkdir -p /data/fractals
              mkdir -p /data/inference/models/yolo
              mkdir -p /data/inference/models/fasterrcnn
              mkdir -p /data/inference/models/unet
              mkdir -p /data/inference/input_images
              mkdir -p /data/inference/output_images
              tail -f /dev/null
            "
  inference:
    build:
      context: inference
      dockerfile: Dockerfile
    volumes:
      - data_volume:/data
      - env_data:/env_data
    env_file:
      - ./.env
    depends_on:
      - env_manager

  web:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
    networks:
      - app-network
    volumes:
      - env_data:/env_data
      - data_volume:/data
      - ./app:/app #Dev
    env_file:
      - ./.env
    depends_on:
      - env_manager

  preprocessing:
    build:
      context: preprocessing
      dockerfile: Dockerfile
    volumes:
      - env_data:/env_data
      - data_volume:/data
      - ./preprocessing:/preprocessing #Dev
    env_file:
      - ./.env
    depends_on:
      - env_manager
      - data_volume

  augmentation:
    build:
      context: augmentation
      dockerfile: Dockerfile
    volumes:
      - env_data:/env_data
      - data_volume:/data
      - ./augmentation:/augmentation #Dev
    env_file:
      - ./.env
    depends_on:
      - env_manager
      - data_volume

  model-creation:
    build:
      context: model_creation
      dockerfile: Dockerfile
    volumes:
      - env_data:/env_data
      - data_volume:/data
      - ./model_creation:/model_creation #Dev
    env_file:
      - ./.env
    depends_on:
      - env_manager
      - data_volume

volumes:
  data_volume:
  inference_volume:
  env_data:

networks:
  app-network:
    driver: bridge